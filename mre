#!/bin/bash

PROD_COMPOSE_FILES=("monitoring" "microservices.base" "microservices.prod")
DEV_COMPOSE_FILES=("microservices.base" "microservices.dev")

prod_compose_files_argument=$(printf " -f ./docker-compose.%s.yml" "${PROD_COMPOSE_FILES[@]}")
dev_compose_files_argument=$(printf " -f ./docker-compose.%s.yml" "${DEV_COMPOSE_FILES[@]}")

# environment variables are in .env files
initEnv() {
    while read LINE; do
        if  [[ $LINE != \#* ]] && [[ $LINE != "" ]];
        then
        eval "export $LINE"
        fi
    done < $1
}


status() {
    docker-compose $prod_compose_files_argument ps
}

dev() {
    echo "Starting microrealestate..."
    initEnv dev.env
    docker-compose $dev_compose_files_argument up --build
}

start() {
    echo "Starting microrealestate..."
    initEnv prod.env
    docker-compose $prod_compose_files_argument up -d --force-recreate > /dev/null
    status
    echo ""
    echo "Front-end             http://localhost:$LOCA_PORT"
    echo "kibana                http://localhost:$KIBANA_PORT"
    echo "cadvisor              http://localhost:$CADVISOR_PORT"
    echo "rabbitmq Management   http://localhost:$RABBITMQ_MANAGEMENT_PORT"
}

stop() {
    echo "Stoping microrealestate..."
    docker-compose $prod_compose_files_argument stop > /dev/null
    status
}

display_help() {
    echo "Usage: $0 [option...] {dev|status|start|stop|restart}" >&2
}

case "$1" in
    dev)
        dev
        ;;
    status)
        status
        ;;
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    -h | --help)
        display_help
        exit 0
        ;;
    *)
        display_help
        exit 1
        ;;
esac